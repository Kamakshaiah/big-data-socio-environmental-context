library(tm) #load text mining library
bigse <- read.csv(file.choose())
names(bigse)
bigseabs <- bigse["Abstract"]
length(t(bigseabs))
bigsecorp <- VCorpus((VectorSource(t(bigseabs))))
abstracts_corp <- tm_map(bigsecorp, stripWhitespace)
abstracts_corp <- tm_map(abstracts_corp, removePunctuation)
abstracts_corp <- tm_map(abstracts_corp, content_transformer(tolower))
abstracts_corp <- tm_map(abstracts_corp, removeWords, stopwords("english"))
abstracts_corp <- tm_map(abstracts_corp, removeNumbers)
adtm <- DocumentTermMatrix(abstracts_corp)
tm::inspect(adtm[10:16, ] )
dim(adtm) # [1]   57 1652
adtm$dimnames
bigse_ <- adtm[, -c(1:10)]
dim(bigse_) # [1]   62 2635
library(FactoMineR)
bigsedf <- data.frame(as.matrix(bigse_), stringsAsFactors=FALSE)
bigsedfdense <- data.frame(as.matrix(removeSparseTerms(bigse_, 0.90)))
dim(bigsedfdense) #200
names(bigsedfdense)
bigsefinaldf <- subset(bigsedfdense, select = -c(across, addition, additional, address, aims, also,
among, areas, article, articles, aspects, authors,
available, based, better, bias, biases, can, conclusions,
construct, continuous, control, criteria, current,
detailed, develop, developed, development, develops, different,
especially, even, existing, explore, factors, features, finally,
findings, first, follows, furthermore, future, general, high,
highlight, however, human, identify, impact, implementation,
implemented, important, improve, improving, including,
increasing, initial, issue, key, limited, mainly,
many, may, method, methods, model, moreover, multiple, need,
needed, new, novel, number, one, order, paper, potential, practical,
problems, process, processing, projects, propose, proposed,
protection, provide, public, purpose, quality, reference, related,
reporting, required, results, review, second, set, several, show,
shows, significant, significantly, smart, solve, standards, studies, study, theory,
third, three, time, two, understanding, use, used, using, various, verification, ways, well,
whole, will, within, work, year))
length(names(bigsefinaldf)) # 75
names(bigsefinaldf)
fit <- CA(data.frame(bigsefinaldf), 2)
plot.CA(fit, xlim = c(0, 1), ylim = c(-1, 0))
plot.CA(fit, xlim = c(0, 1), ylim = c(0, 1))
plot.CA(fit, xlim = c(0.5, 1), ylim = c(0, 1))
plot.CA(fit, xlim = c(0.5, 1), ylim = c(0, 2))
plot.CA(fit, xlim = c(0.5, 2), ylim = c(0, 0.5))
plot.CA(fit, xlim = c(0.5, 1.5), ylim = c(0, 0.5))
plot.CA(fit, xlim = c(-1, 0), ylim = c(0, 2))
plot.CA(fit, xlim = c(-1, 0), ylim = c(0, 2))
plot.CA(fit, xlim = c(-1, 0), ylim = c(0, 1.5))
plot.CA(fit, xlim = c(-1.5, 0), ylim = c(0, 1.5))
plot.CA(fit, xlim = c(-1.5, 0), ylim = c(2, 4))
fit <- CA(data.frame(bigsefinaldf), 37)
plot.CA(fit, xlim = c(-2, -1), ylim = c(-2, -1))
head(bigsefinaldf)
dim(bigsefinaldf)
path <- readline() #D:\\Research\\PAPERS\\big data\\social-environmental
# D:\Research\PAPERS\big data\social-environmental-30 April 2024\data\for-analysis
pathch <- gsub('\\\\','//', path)
setwd(path)
getwd()
bigse <- read.csv(file.choose())
names(bigse)
bigseabs <- bigse["Abstract"]
length(t(bigseabs)) # 62
bigsecorp <- VCorpus((VectorSource(t(bigseabs))))
abstracts_corp <- tm_map(bigsecorp, stripWhitespace)
# https://www.clres.com/ca/pdepca01a.html
library(tm) #load text mining library
bigsecorp <- VCorpus((VectorSource(t(bigseabs))))
abstracts_corp <- tm_map(bigsecorp, stripWhitespace)
abstracts_corp <- tm_map(abstracts_corp, removePunctuation)
abstracts_corp <- tm_map(abstracts_corp, content_transformer(tolower))
abstracts_corp <- tm_map(abstracts_corp, removeWords, stopwords("english"))
abstracts_corp <- tm_map(abstracts_corp, removeNumbers)
abstracts_corp
tm::inspect(abstracts_corp)
data.frame(tm::inspect(abstracts_corp))
data.matrix(tm::inspect(abstracts_corp))
head(data.frame(as.matrix(tm::inspect(abstracts_corp))))
data.frame(as.matrix(tm::inspect(abstracts_corp)))
data.frame(as.matrix(abstracts_corp))
data.frame(abstracts_corp)
abstracts_corp
as.data.frame(as.matrix(abstracts_corp))
typeof(abstracts_corp)
data.frame(abstracts_corp)
data.frame(unlist(abstracts_corp))
myCorpus <- tm_map(abstracts_corp, PlainTextDocument)
myCorpus
data.frame(text = sapply(myCorpus, as.character), stringsAsFactors = FALSE)
as.data.frame(myCorpus)
data.frame(text=unlist(sapply(myCorpus, `[`, "content")),
stringsAsFactors=F)
as.data.frame(as.matrix(myCorpus))
myCorpus
names(myCorpus)
myCorpus[[1]]
myCorpus[1]
myCorpus[2]
myCorpus[3]
myCorpus[[1]]
myCorpus[[2]]
myCorpus
as.matrix(myCorpus)
as.data.frame(myCorpus)
typeof(myCorpus)
names(myCorpus)
as.data.frame(unlist(myCorpus))
as.data.frame(as.matrix(unlist(myCorpus)))
as.data.frame(as.matrix(myCorpus))
myCorpus[[1]]
myCorpus[[1]]["chars"]
